{"meta":{"version":"2.0.1","format":20,"date":1618681733134},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n  <br/>\n  <p>\n    <a href=\"https://instatus.vicente015.dev/\"><img src=\"https://cdn.jsdelivr.net/gh/Vicente015/instatus.ts@dev/.github/header.svg\" width=\"546\" alt=\"instatus.ts\"/></a>\n  </p>\n  <p>\n    <a href=\"https://www.npmjs.com/package/instatus.ts\"><img src=\"https://img.shields.io/npm/v/instatus.ts.svg?maxAge=3600\" alt=\"Version\"/></a>\n    <a href=\"https://www.npmjs.com/package/instatus.ts\"><img src=\"https://img.shields.io/npm/dt/instatus.ts.svg?maxAge=3600\" alt=\"Downloads\"/></a>\n    <a href=\"https://david-dm.org/Vicente015/instatus.ts\"><img src=\"https://img.shields.io/david/Vicente015/instatus.ts.svg?maxAge=3600\" alt=\"Dependencies\"/></a>\n    <a href=\"https://instatus.vicente015.dev\"><img src=\"https://img.shields.io/badge/Documentation-instatus.vicente015.dev-yellow\" alt=\"Documentation\">\n  </p>\n  <p>\n    <a href=\"https://nodei.co/npm/instatus.ts/\"><img src=\"https://nodei.co/npm/instatus.ts.png?downloads=true&stars=true\" alt=\"npm info\" /></a>\n  </p>\n</div>\n\n- [About](#about)\n- [Installation](#installation)\n- [Example usage](#example-usage)\n- [Documentation](#documentation)\n\n## About\nA [Node.js](https://nodejs.org/) library to interact with [Instatus API](https://instatus.com/help/api).\n\n* Written in TypeScript.\n* Object-oriented.\n\n## Installation\n* With NPM: `npm install instatus.ts`\n* With Yarn: `yarn add instatus.ts`\n\n## Example usage\n* JavaScript: \n  ```js\n  const { InstatusClient } = require('instatus.ts')\n\n  // Create a client to interact with the Instatus\n  const Instatus = new InstatusClient({\n    key: 'YOUR_API_KEY', // You can get it in https://instatus.com/app/developer\n    pageID: 'PAGE_ID' // You can get it with client.pages.get(), default to the first page\n  })\n\n  // Instatus.pages Returns the information of the page that you have provided in the options or the first one you have, from here you can interact with your page\n\n  // Gets the website component ID to interact with it\n  let websiteComponent = Instatus.pages.components.getAll().then(components => {\n    // Components returns an array, find the component on it\n    let websiteComponent = components.find(c => c.name == 'Website')\n\n    // Add an incident that affects that component\n    Instatus.pages.incidents.add({\n      name: 'Website down', // Incident title\n      message: 'The website is down, we are investigating it', // Incident description\n      components: [websiteComponent], // Affecting components\n      started: Date.now(), // The current date\n      status: 'INVESTIGATING', // The incident status \n      notify: true, // Notify the users\n      statuses: [ // Status of the affected components\n        {\n          id: websiteComponent,\n          status: 'PARTIALOUTAGE' // Status of the component\n        }\n      ]\n    })\n  })\n  ```\n\n## Documentation\nYou can see the documentation [here](https://instatus.vicente015.dev/).","path":"README.md"},"changelog":{"name":"Changelog","type":"md","content":"","path":"CHANGELOG.md"}}},"examples":{"name":"Examples","files":{"basic":{"name":"Managing incidents","type":"js","content":"// WIP","path":"docs/examples/incidents.js"}}}},"classes":[{"name":"InstatusClient","description":"The main hub to interact with the Instatus API","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"options","description":"The client options","type":[[["InstatusClientOptions"]]]}],"returns":[[["InstatusClient"]]],"meta":{"line":15,"file":"Client.ts","path":"client"}},"props":[{"name":"debug","type":[[["undefined"," | "],["false"," | "],["true"]]],"meta":{"line":13,"file":"Client.ts","path":"client"}},{"name":"key","type":[[["string"]]],"meta":{"line":12,"file":"Client.ts","path":"client"}},{"name":"pageID","type":[[["undefined"," | "],["string"]]],"meta":{"line":14,"file":"Client.ts","path":"client"}},{"name":"pages","type":[[["StatusPages"]]],"meta":{"line":15,"file":"Client.ts","path":"client"}}],"methods":[{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"key","type":[[["string"]]]},{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":20,"file":"BaseClient.ts","path":"structures"}},{"name":"setDefaultPage","access":"private","returns":[[["Promise","<"],["void",">"]]],"meta":{"line":30,"file":"Client.ts","path":"client"}}],"meta":{"line":11,"file":"Client.ts","path":"client"}},{"name":"Component","description":"Represents an Component","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]},{"name":"data","description":"The component raw data","type":[[["RawComponent"]]]}],"returns":[[["Component"]]],"meta":{"line":22,"file":"Component.ts","path":"components"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"description","type":[[["string"," | "],["undefined"]]],"meta":{"line":16,"file":"Component.ts","path":"components"}},{"name":"group","type":[[["undefined"," | "],["string"]]],"meta":{"line":21,"file":"Component.ts","path":"components"}},{"name":"id","type":[[["string"]]],"meta":{"line":14,"file":"Component.ts","path":"components"}},{"name":"incidents","type":[[["Array","<"],["Incident",">"]]],"meta":{"line":22,"file":"Component.ts","path":"components"}},{"name":"name","type":[[["string"]]],"meta":{"line":15,"file":"Component.ts","path":"components"}},{"name":"order","type":[[["Number"]]],"meta":{"line":20,"file":"Component.ts","path":"components"}},{"name":"showUptime","default":"false","type":[[["boolean"]]],"meta":{"line":19,"file":"Component.ts","path":"components"}},{"name":"status","default":"\"OPERATIONAL\"","type":[[["ComponentStatus"]]],"meta":{"line":17,"file":"Component.ts","path":"components"}},{"name":"uniqueEmail","type":[[["undefined"," | "],["string"]]],"meta":{"line":18,"file":"Component.ts","path":"components"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":73,"file":"Component.ts","path":"components"}},{"name":"_parse","access":"private","params":[{"name":"data","type":[[["RawComponent"]]]}],"returns":[[["void"]]],"meta":{"line":79,"file":"Component.ts","path":"components"}},{"name":"delete","description":"Deletes this component","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["AxiosResponse","<"],["ComponentDelete",">>"]]],"returnsDescription":"{Promise<AxiosResponse<ComponentDelete>>}","meta":{"line":68,"file":"Component.ts","path":"components"}},{"name":"get","description":"Gets this component","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":41,"file":"Component.ts","path":"components"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Edits this component","see":[],"examples":[],"emits":[],"params":[{"name":"data","description":"The data to update the component","type":[[["ComponentPost"]]]}],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":55,"file":"Component.ts","path":"components"}}],"meta":{"line":13,"file":"Component.ts","path":"components"}},{"name":"ComponentManager","description":"A manager of the components belonging to a status page","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]}],"returns":[[["ComponentManager"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}}],"methods":[{"name":"_check","access":"private","params":[{"name":"componentID","optional":true,"type":[[["undefined"," | "],["string"]]]}],"returns":[[["void"]]],"meta":{"line":85,"file":"ComponentManager.ts","path":"components"}},{"name":"add","description":"Creates an component","see":[],"examples":[],"emits":[],"params":[{"name":"data","description":"The data to crate the component","type":[[["ComponentPost"]]]}],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":51,"file":"ComponentManager.ts","path":"components"}},{"name":"delete","description":"Deletes an component","see":[],"examples":[],"emits":[],"params":[{"name":"componentID","description":"The component ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["ComponentDelete",">>"]]],"returnsDescription":"{Promise<AxiosResponse<ComponentDelete>>}","meta":{"line":80,"file":"ComponentManager.ts","path":"components"}},{"name":"get","description":"Gets one component","see":[],"examples":[],"emits":[],"params":[{"name":"componentID","description":"The component ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":37,"file":"ComponentManager.ts","path":"components"}},{"name":"getAll","description":"Gets all components","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Array","<"],["Component",">>"]]],"returnsDescription":"{Promise<Component[]>}","meta":{"line":21,"file":"ComponentManager.ts","path":"components"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Edits an component","see":[],"examples":[],"emits":[],"params":[{"name":"componentID","description":"The component ID","type":[[["string"]]]},{"name":"data","description":"The data to update the component","type":[[["ComponentPost"]]]}],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":66,"file":"ComponentManager.ts","path":"components"}}],"meta":{"line":13,"file":"ComponentManager.ts","path":"components"}},{"name":"PartialComponent","description":"Represents an partial component returned by the incident","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]},{"name":"data","description":"The partial component","type":[[["PartialComponent"]]]}],"returns":[[["PartialComponent"]]],"meta":{"line":18,"file":"PartialComponent.ts","path":"components"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"id","type":[[["string"]]],"meta":{"line":14,"file":"PartialComponent.ts","path":"components"}},{"name":"name","type":[[["string"]]],"meta":{"line":15,"file":"PartialComponent.ts","path":"components"}},{"name":"showUptime","type":[[["boolean"]]],"meta":{"line":17,"file":"PartialComponent.ts","path":"components"}},{"name":"site","type":[[["Array","<"],["PartialSite",">"]]],"meta":{"line":18,"file":"PartialComponent.ts","path":"components"}},{"name":"status","type":[[["ComponentStatus"]]],"meta":{"line":16,"file":"PartialComponent.ts","path":"components"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":69,"file":"PartialComponent.ts","path":"components"}},{"name":"_parse","access":"private","params":[{"name":"data","type":[[["PartialComponent"]]]}],"returns":[[["void"]]],"meta":{"line":75,"file":"PartialComponent.ts","path":"components"}},{"name":"delete","description":"Deletes this component","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["AxiosResponse","<"],["ComponentDelete",">>"]]],"returnsDescription":"{Promise<AxiosResponse<ComponentDelete>>}","meta":{"line":64,"file":"PartialComponent.ts","path":"components"}},{"name":"get","description":"Gets this component","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":37,"file":"PartialComponent.ts","path":"components"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Edits this component","see":[],"examples":[],"emits":[],"params":[{"name":"data","description":"The data to update the component","type":[[["ComponentPost"]]]}],"returns":[[["Promise","<"],["Component",">"]]],"returnsDescription":"{Promise<Component>}","meta":{"line":51,"file":"PartialComponent.ts","path":"components"}}],"meta":{"line":13,"file":"PartialComponent.ts","path":"components"}},{"name":"Incident","description":"Represents an incident","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]},{"name":"data","description":"The incident raw data","type":[[["RawIncident"]]]}],"returns":[[["Incident"]]],"meta":{"line":20,"file":"Incident.ts","path":"incidents"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"components","type":[[["Array","<"],["PartialComponent",">"]]],"meta":{"line":20,"file":"Incident.ts","path":"incidents"}},{"name":"id","type":[[["string"]]],"meta":{"line":14,"file":"Incident.ts","path":"incidents"}},{"name":"name","type":[[["string"]]],"meta":{"line":15,"file":"Incident.ts","path":"incidents"}},{"name":"resolved","type":[[["Date"]]],"meta":{"line":18,"file":"Incident.ts","path":"incidents"}},{"name":"started","type":[[["Date"]]],"meta":{"line":17,"file":"Incident.ts","path":"incidents"}},{"name":"status","type":[[["IncidentStatus"]]],"meta":{"line":16,"file":"Incident.ts","path":"incidents"}},{"name":"updates","type":[[["IncidentsUpdates"]]],"meta":{"line":19,"file":"Incident.ts","path":"incidents"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":72,"file":"Incident.ts","path":"incidents"}},{"name":"_parse","access":"private","params":[{"name":"data","type":[[["RawIncident"]]]}],"returns":[[["void"]]],"meta":{"line":78,"file":"Incident.ts","path":"incidents"}},{"name":"delete","description":"Deletes this incident","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["AxiosResponse","<"],["IncidentDelete",">>"]]],"returnsDescription":"{Promise<AxiosResponse<IncidentDelete>>}","meta":{"line":67,"file":"Incident.ts","path":"incidents"}},{"name":"get","description":"Gets this incident","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Incident",">"]]],"returnsDescription":"{Promise<Incident>}","meta":{"line":40,"file":"Incident.ts","path":"incidents"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Edits this incident","see":[],"examples":[],"emits":[],"params":[{"name":"data","description":"The data to edit the incident","type":[[["IncidentPost"]]]}],"returns":[[["Promise","<"],["Incident",">"]]],"returnsDescription":"{Promise<Incident>}","meta":{"line":54,"file":"Incident.ts","path":"incidents"}}],"meta":{"line":13,"file":"Incident.ts","path":"incidents"}},{"name":"IncidentsManager","description":"A manager of the incidents belonging to a status page","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]}],"returns":[[["IncidentsManager"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}}],"methods":[{"name":"_check","access":"private","params":[{"name":"incidentID","optional":true,"type":[[["undefined"," | "],["string"]]]}],"returns":[[["void"]]],"meta":{"line":87,"file":"IncidentManager.ts","path":"incidents"}},{"name":"add","description":"Creates an incident","see":[],"examples":[],"emits":[],"params":[{"name":"data","description":"The data to create the incident","type":[[["IncidentPost"]]]}],"returns":[[["Promise","<"],["Incident",">"]]],"returnsDescription":"{Promise<Incident>}","meta":{"line":53,"file":"IncidentManager.ts","path":"incidents"}},{"name":"delete","description":"Deletes an incident","see":[],"examples":[],"emits":[],"params":[{"name":"incidentID","description":"The incident ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["IncidentDelete",">>"]]],"returnsDescription":"{Promise<AxiosResponse<IncidentDelete>>}","meta":{"line":82,"file":"IncidentManager.ts","path":"incidents"}},{"name":"get","description":"Gets one incident","see":[],"examples":[],"emits":[],"params":[{"name":"incidentID","description":"The incident ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["Incident",">"]]],"returnsDescription":"{Promise<Incident>}","meta":{"line":39,"file":"IncidentManager.ts","path":"incidents"}},{"name":"getAll","description":"Gets all incidents","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Array","<"],["Incident",">>"]]],"returnsDescription":"{Promise<Incident[]>}","meta":{"line":22,"file":"IncidentManager.ts","path":"incidents"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Edits an incident","see":[],"examples":[],"emits":[],"params":[{"name":"incidentID","description":"The incident ID","type":[[["string"]]]},{"name":"data","description":"The data to edit the incident","type":[[["IncidentPost"]]]}],"returns":[[["Promise","<"],["Incident",">"]]],"returnsDescription":"{Promise<Incident>}","meta":{"line":68,"file":"IncidentManager.ts","path":"incidents"}}],"meta":{"line":14,"file":"IncidentManager.ts","path":"incidents"}},{"name":"IncidentsUpdates","description":"The incident updates","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]},{"name":"incidentID","description":"The ID of the incident","type":[[["string"]]]}],"returns":[[["IncidentsUpdates"]]],"meta":{"line":14,"file":"IncidentsUpdates.ts","path":"incidents"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"incidentID","type":[[["string"]]],"meta":{"line":14,"file":"IncidentsUpdates.ts","path":"incidents"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":67,"file":"IncidentsUpdates.ts","path":"incidents"}},{"name":"add","description":"Adds an incident update","see":[],"examples":[],"emits":[],"params":[{"name":"data","type":[[["IncidentUpdatePost"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["IncidentUpdate",">>"]]],"returnsDescription":"{Promise<AxiosResponse<IncidentUpdate>>}","meta":{"line":48,"file":"IncidentsUpdates.ts","path":"incidents"}},{"name":"get","description":"Gets an incident update","see":[],"examples":[],"emits":[],"params":[{"name":"incidentUpdateId","description":"The incident update ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["IncidentUpdate",">>"]]],"returnsDescription":"{Promise<AxiosResponse<IncidentUpdate>>}","meta":{"line":35,"file":"IncidentsUpdates.ts","path":"incidents"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Updates an incident update","see":[],"examples":[],"emits":[],"params":[{"name":"incidentUpdateID","description":"The incident update ID","type":[[["string"]]]},{"name":"data","type":[[["IncidentUpdatePut"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["IncidentUpdate",">>"]]],"returnsDescription":"{Promise<AxiosResponse<IncidentUpdate>>}","meta":{"line":62,"file":"IncidentsUpdates.ts","path":"incidents"}}],"meta":{"line":13,"file":"IncidentsUpdates.ts","path":"incidents"}},{"name":"Metric","description":"Represents a Metric","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]},{"name":"data","description":"The metric raw data","type":[[["RawMetric"]]]}],"returns":[[["Metric"]]],"meta":{"line":18,"file":"Metric.ts","path":"metrics"}},"props":[{"name":"active","type":[[["boolean"]]],"meta":{"line":15,"file":"Metric.ts","path":"metrics"}},{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"data","type":[[["Array","<"],["MetricData",">"]]],"meta":{"line":18,"file":"Metric.ts","path":"metrics"}},{"name":"id","type":[[["string"]]],"meta":{"line":13,"file":"Metric.ts","path":"metrics"}},{"name":"name","type":[[["string"]]],"meta":{"line":14,"file":"Metric.ts","path":"metrics"}},{"name":"order","type":[[["number"]]],"meta":{"line":16,"file":"Metric.ts","path":"metrics"}},{"name":"suffix","type":[[["string"]]],"meta":{"line":17,"file":"Metric.ts","path":"metrics"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":93,"file":"Metric.ts","path":"metrics"}},{"name":"_parse","access":"private","params":[{"name":"data","type":[[["RawMetric"]]]}],"returns":[[["void"]]],"meta":{"line":99,"file":"Metric.ts","path":"metrics"}},{"name":"add","description":"Adds a datapoint to this metric","see":[],"examples":[],"emits":[],"params":[{"name":"data","type":[[["MetricDataPointPost"]]]}],"returns":[[["Promise","<"],["MetricDataPoint",">"]]],"returnsDescription":"{Promise<MetricDataPoint>}","meta":{"line":75,"file":"Metric.ts","path":"metrics"}},{"name":"adds","description":"Adds multiple datapoints to this metric","see":[],"examples":[],"emits":[],"params":[{"name":"data","type":[[["Array","<"],["MetricDataPointPost",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["MetricDataPointPost",">>"]]],"returnsDescription":"{Promise<MetricDataPointPost[]>}","meta":{"line":88,"file":"Metric.ts","path":"metrics"}},{"name":"delete","description":"Deletes this metricº","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":62,"file":"Metric.ts","path":"metrics"}},{"name":"get","description":"Gets this metric","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":37,"file":"Metric.ts","path":"metrics"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Updates this metric","see":[],"examples":[],"emits":[],"params":[{"name":"data","type":[[["MetricPut"]]]}],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":50,"file":"Metric.ts","path":"metrics"}}],"meta":{"line":12,"file":"Metric.ts","path":"metrics"}},{"name":"MetricManager","description":"A manager of the metrics","see":[],"extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]}],"returns":[[["MetricManager"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}}],"methods":[{"name":"_check","access":"private","params":[{"name":"metricID","optional":true,"type":[[["undefined"," | "],["string"]]]}],"returns":[[["void"]]],"meta":{"line":95,"file":"MetricManager.ts","path":"metrics"}},{"name":"add","description":"Adds a datapoint to a metric","see":[],"examples":[],"emits":[],"params":[{"name":"metricID","description":"The metric ID","type":[[["string"]]]},{"name":"data","description":"The data to add","type":[[["MetricDataPointPost"]]]}],"returns":[[["Promise","<"],["MetricDataPoint",">"]]],"returnsDescription":"{Promise<MetricDataPoint>}","meta":{"line":76,"file":"MetricManager.ts","path":"metrics"}},{"name":"adds","description":"Adds multiple data to a metric","see":[],"examples":[],"emits":[],"params":[{"name":"metricID","description":"The metric ID","type":[[["string"]]]},{"name":"data","description":"The data to add","type":[[["Array","<"],["MetricDataPointPost",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["MetricDataPointPost",">>"]]],"returnsDescription":"{Promise<MetricDataPointPost[]>}","meta":{"line":90,"file":"MetricManager.ts","path":"metrics"}},{"name":"delete","description":"Deletes a metric","see":[],"examples":[],"emits":[],"params":[{"name":"metricID","description":"The metric ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":62,"file":"MetricManager.ts","path":"metrics"}},{"name":"get","description":"Gets one metric","see":[],"examples":[],"emits":[],"params":[{"name":"metricID","description":"The metric ID","type":[[["string"]]]}],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":35,"file":"MetricManager.ts","path":"metrics"}},{"name":"getAll","description":"Gets all metrics","see":[],"examples":[],"emits":[],"returns":[[["Promise","<"],["Array","<"],["Metric",">>"]]],"returnsDescription":"{Promise<Metric[]>}","meta":{"line":21,"file":"MetricManager.ts","path":"metrics"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","description":"Updates a metric","see":[],"examples":[],"emits":[],"params":[{"name":"metricID","description":"The metric ID","type":[[["string"]]]},{"name":"data","description":"The data to update","type":[[["MetricPut"]]]}],"returns":[[["Promise","<"],["Metric",">"]]],"returnsDescription":"{Promise<Metric>}","meta":{"line":49,"file":"MetricManager.ts","path":"metrics"}}],"meta":{"line":13,"file":"MetricManager.ts","path":"metrics"}},{"name":"StatusPages","extends":["Base"],"construct":{"name":"constructor","params":[{"name":"client","type":[[["InstatusClient"]]]}],"returns":[[["StatusPages"]]],"meta":{"line":10,"file":"StatusPages.ts","path":"statusPages"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"components","type":[[["ComponentManager"]]],"meta":{"line":8,"file":"StatusPages.ts","path":"statusPages"}},{"name":"incidents","type":[[["IncidentManager"]]],"meta":{"line":7,"file":"StatusPages.ts","path":"statusPages"}},{"name":"members","type":[[["TeamMemberManager"]]],"meta":{"line":10,"file":"StatusPages.ts","path":"statusPages"}},{"name":"metrics","type":[[["MetricManager"]]],"meta":{"line":9,"file":"StatusPages.ts","path":"statusPages"}}],"methods":[{"name":"add","params":[{"name":"data","type":[[["StatusPagesPost"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["StatusPage",">>"]]],"meta":{"line":27,"file":"StatusPages.ts","path":"statusPages"}},{"name":"delete","params":[{"name":"data","type":[[["StatusPagesDelete"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["any",">>"]]],"meta":{"line":37,"file":"StatusPages.ts","path":"statusPages"}},{"name":"get","returns":[[["Promise","<"],["AxiosResponse","<"],["Array","<"],["StatusPage",">>>"]]],"meta":{"line":22,"file":"StatusPages.ts","path":"statusPages"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}},{"name":"update","params":[{"name":"data","type":[[["StatusPagesPut"]]]}],"returns":[[["Promise","<"],["AxiosResponse","<"],["StatusPage",">>"]]],"meta":{"line":32,"file":"StatusPages.ts","path":"statusPages"}}],"meta":{"line":6,"file":"StatusPages.ts","path":"statusPages"}},{"name":"Base","description":"Base class","see":[],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]}],"returns":[[["Base"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}}],"methods":[{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}}],"meta":{"line":10,"file":"Base.ts","path":"structures"}},{"name":"Base","description":"Base client class","see":[],"methods":[{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"key","type":[[["string"]]]},{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":20,"file":"BaseClient.ts","path":"structures"}}],"meta":{"line":10,"file":"BaseClient.ts","path":"structures"}},{"name":"TeamMember","extends":["Base"],"construct":{"name":"constructor","params":[{"name":"client","type":[[["InstatusClient"]]]},{"name":"data","type":[[["RawTeamMember"]]]}],"returns":[[["TeamMember"]]],"meta":{"line":7,"file":"TeamMember.ts","path":"teamMembers"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},{"name":"id","type":[[["string"]]],"meta":{"line":6,"file":"TeamMember.ts","path":"teamMembers"}},{"name":"user","type":[[["TeamUser"]]],"meta":{"line":7,"file":"TeamMember.ts","path":"teamMembers"}}],"methods":[{"name":"_check","access":"private","returns":[[["void"]]],"meta":{"line":20,"file":"TeamMember.ts","path":"teamMembers"}},{"name":"_parse","access":"private","params":[{"name":"data","type":[[["RawTeamMember"]]]}],"returns":[[["void"]]],"meta":{"line":26,"file":"TeamMember.ts","path":"teamMembers"}},{"name":"delete","returns":[[["Promise","<"],["any",">"]]],"meta":{"line":15,"file":"TeamMember.ts","path":"teamMembers"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}}],"meta":{"line":5,"file":"TeamMember.ts","path":"teamMembers"}},{"name":"TeamMemberManager","extends":["Base"],"construct":{"name":"constructor","see":[],"examples":[],"emits":[],"params":[{"name":"client","description":"The client that instantiated this","type":[[["InstatusClient"]]]}],"returns":[[["TeamMemberManager"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}},"props":[{"name":"client","type":[[["InstatusClient"]]],"meta":{"line":11,"file":"Base.ts","path":"structures"}}],"methods":[{"name":"_check","access":"private","params":[{"name":"TeamMemberID","optional":true,"type":[[["undefined"," | "],["string"]]]}],"returns":[[["void"]]],"meta":{"line":29,"file":"TeamMemberManager.ts","path":"teamMembers"}},{"name":"add","params":[{"name":"data","type":[[["TeamMemberPost"]]]}],"returns":[[["Promise","<"],["any",">"]]],"meta":{"line":20,"file":"TeamMemberManager.ts","path":"teamMembers"}},{"name":"delete","params":[{"name":"TeamMemberID","type":[[["string"]]]}],"returns":[[["Promise","<"],["any",">"]]],"meta":{"line":25,"file":"TeamMemberManager.ts","path":"teamMembers"}},{"name":"get","params":[{"name":"TeamMemberID","type":[[["string"]]]}],"returns":[[["Promise","<"],["TeamMember",">"]]],"meta":{"line":13,"file":"TeamMemberManager.ts","path":"teamMembers"}},{"name":"getAll","returns":[[["Promise","<"],["Array","<"],["TeamMember",">>"]]],"meta":{"line":7,"file":"TeamMemberManager.ts","path":"teamMembers"}},{"name":"request","description":"Makes a request to the API","see":[],"examples":[],"emits":[],"params":[{"name":"method","description":"HTTP Method","type":[[["Method"]]]},{"name":"uri","description":"URI","type":[[["string"]]]},{"name":"data","optional":true,"type":[[["undefined"," | "],["object"]]]}],"returns":[[["Promise","<"],["any",">"]]],"returnsDescription":"{Promise<any>}","meta":{"line":30,"file":"Base.ts","path":"structures"}}],"meta":{"line":5,"file":"TeamMemberManager.ts","path":"teamMembers"}}],"typedefs":[{"name":"Component","meta":{"line":140,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"site","type":[[["{"],["\ncolor",": "],["undefined"," | "],["string",","],["\nid",": "],["string",","],["\nlogoUrl",": "],["undefined"," | "],["string",","],["\nname",": "],["string",","],["\npublicEmail",": "],["undefined"," | "],["string",","],["\nslackIntegration",": "],["Array","<"],["any",">,"],["\nsubdomain",": "],["string",","],["\nsubscribers",": []"],["\n","}"]]]},{"name":"status","type":[[["ComponentStatus"]]]},{"name":"subscribers","optional":true,"type":[[["[]"]]]}]},{"name":"ComponentDelete","meta":{"line":245,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]}]},{"name":"ComponentPost","meta":{"line":236,"file":"Typings.ts","path":"utils"},"props":[{"name":"description","type":[[["string"]]]},{"name":"grouped","type":[[["boolean"]]]},{"name":"name","type":[[["string"]]]},{"name":"order","type":[[["number"]]]},{"name":"showUptime","type":[[["boolean"]]]},{"name":"status","type":[[["ComponentStatus"]]]}]},{"name":"IncidentDelete","meta":{"line":194,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]}]},{"name":"IncidentPost","meta":{"line":179,"file":"Typings.ts","path":"utils"},"props":[{"name":"components","type":[[["Array","<"],["string",">"]]]},{"name":"message","type":[[["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"notify","type":[[["boolean"]]]},{"name":"started","type":[[["Date"," | "],["string"]]]},{"name":"status","type":[[["IncidentStatus"]]]},{"name":"statuses","type":[[["Array","<"],["Statuses",">"]]]}]},{"name":"IncidentUpdate","meta":{"line":198,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"incident","type":[[["RawIncident"]]]},{"name":"message","type":[[["string"]]]},{"name":"messageHtml","type":[[["string"]]]},{"name":"notify","type":[[["boolean"]]]},{"name":"started","type":[[["Date"," | "],["string"]]]},{"name":"status","type":[[["IncidentStatus"]]]}]},{"name":"IncidentUpdatePost","meta":{"line":208,"file":"Typings.ts","path":"utils"},"props":[{"name":"components","type":[[["Array","<"],["string",">"]]]},{"name":"message","type":[[["string"]]]},{"name":"notify","type":[[["boolean"]]]},{"name":"started","type":[[["Date"," | "],["string"]]]},{"name":"statuses","type":[[["Array","<"],["Statuses",">"]]]}]},{"name":"IncidentUpdatePut","meta":{"line":216,"file":"Typings.ts","path":"utils"},"props":[{"name":"components","type":[[["Array","<"],["string",">"]]]},{"name":"message","type":[[["string"]]]},{"name":"notify","type":[[["boolean"]]]},{"name":"started","type":[[["Date"," | "],["string"]]]},{"name":"statuses","type":[[["Array","<"],["Statuses",">"]]]}]},{"name":"IncidentUpdates","meta":{"line":167,"file":"Typings.ts","path":"utils"},"props":[{"name":"createdAt","type":[[["Date"," | "],["string"]]]},{"name":"duration","optional":true,"type":[[["undefined"," | "],["number"]]]},{"name":"ended","optional":true,"type":[[["Date"," | "],["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"message","type":[[["string"]]]},{"name":"messsageHtml","type":[[["string"]]]},{"name":"notify","type":[[["boolean"]]]},{"name":"started","type":[[["Date"," | "],["string"]]]},{"name":"status","type":[[["IncidentStatus"]]]}]},{"name":"InstatusClientOptions","meta":{"line":19,"file":"Typings.ts","path":"utils"},"props":[{"name":"debug","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"key","type":[[["string"]]]},{"name":"pageID","optional":true,"type":[[["undefined"," | "],["string"]]]}]},{"name":"MetricData","meta":{"line":275,"file":"Typings.ts","path":"utils"},"props":[{"name":"timestamp","type":[[["number"]]]},{"name":"value","type":[[["number"]]]}]},{"name":"MetricDataPoint","meta":{"line":285,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"timestamp","type":[[["number"]]]},{"name":"value","type":[[["number"]]]}]},{"name":"MetricDataPointPost","meta":{"line":291,"file":"Typings.ts","path":"utils"},"props":[{"name":"timestamp","type":[[["number"]]]},{"name":"value","type":[[["number"]]]}]},{"name":"MetricPut","meta":{"line":280,"file":"Typings.ts","path":"utils"},"props":[{"name":"name","type":[[["string"]]]},{"name":"suffix","type":[[["string"]]]}]},{"name":"PartialSite","meta":{"line":257,"file":"Typings.ts","path":"utils"},"props":[{"name":"color","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"logoUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"publicEmail","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"subdomain","type":[[["string"]]]}]},{"name":"RawComponent","meta":{"line":224,"file":"Typings.ts","path":"utils"},"props":[{"name":"description","type":[[["string"]]]},{"name":"group","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"incidents","type":[[["Array","<"],["RawIncident",">"]]]},{"name":"name","type":[[["string"]]]},{"name":"order","type":[[["number"]]]},{"name":"showUptime","type":[[["boolean"]]]},{"name":"status","type":[[["ComponentStatus"]]]},{"name":"uniqueEmail","optional":true,"type":[[["undefined"," | "],["string"]]]}]},{"name":"RawIncident","meta":{"line":157,"file":"Typings.ts","path":"utils"},"props":[{"name":"components","type":[[["Array","<"],["PartialComponent",">"]]]},{"name":"id","type":[[["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"resolved","optional":true,"type":[[["Date"]]]},{"name":"started","type":[[["Date"]]]},{"name":"status","type":[[["IncidentStatus"]]]},{"name":"updates","optional":true,"type":[[["IncidentUpdates"]]]}]},{"name":"RawMetric","meta":{"line":266,"file":"Typings.ts","path":"utils"},"props":[{"name":"active","type":[[["boolean"]]]},{"name":"data","type":[[["Array","<"],["MetricData",">"]]]},{"name":"id","type":[[["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"order","type":[[["number"]]]},{"name":"suffix","type":[[["string"]]]}]},{"name":"RawPartialComponent","meta":{"line":249,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"showUptime","type":[[["boolean"]]]},{"name":"site","type":[[["PartialSite"]]]},{"name":"status","type":[[["ComponentStatus"]]]}]},{"name":"RawTeamMember","meta":{"line":296,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"user","type":[[["TeamUser"]]]}]},{"name":"StatusPage","meta":{"line":25,"file":"Typings.ts","path":"utils"},"props":[{"name":"brandColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"createdAt","type":[[["Date"," | "],["string"]]]},{"name":"cssGlobal","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"customDomain","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"degradedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"disruptedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"downColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"faviconUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"googleAnalytics","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlAboveHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowSummary","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlInMeta","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"language","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"launchDate","optional":true,"type":[[["Date"," | "],["string"]]]},{"name":"logoUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"noticeColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"okColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"onboarder","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"publicEmail","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"smsService","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"status","type":[[["PageStatus"]]]},{"name":"subdomain","type":[[["string"]]]},{"name":"suscribeBySms","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"twitter","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"unknownColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"updatedAt","type":[[["Date"," | "],["string"]]]},{"name":"useLargeHeader","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"websiteUrl","optional":true,"type":[[["undefined"," | "],["string"]]]}]},{"name":"StatusPagesDelete","meta":{"line":136,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]}]},{"name":"StatusPagesPost","meta":{"line":59,"file":"Typings.ts","path":"utils"},"props":[{"name":"brandColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"components","type":[[["Array","<"],["string",">"]]]},{"name":"cssGlobal","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"dateFormat","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"dateFormatShort","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"degradedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"disruptedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"downColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"email","type":[[["string"]]]},{"name":"faviconUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"googleAnalytics","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlAboveHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowSummary","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlInMeta","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"language","type":[[["string"]]]},{"name":"launchDate","optional":true,"type":[[["Date"," | "],["string"]]]},{"name":"logoUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"nexmoSecret","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"nexmoSender","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"noticeColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"okColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"smsService","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"subdomain","type":[[["string"]]]},{"name":"subscribeBySms","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"timeformat","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioSender","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioSid","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioToken","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"unknownColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"useLargeHeader","type":[[["boolean"]]]},{"name":"websiteUrl","optional":true,"type":[[["undefined"," | "],["string"]]]}]},{"name":"StatusPagesPut","meta":{"line":95,"file":"Typings.ts","path":"utils"},"props":[{"name":"brandColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"components","type":[[["Array","<"],["string",">"]]]},{"name":"cssGlobal","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"dateFormat","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"dateFormatShort","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"degradedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"disruptedColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"downColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"faviconUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"googleAnalytics","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlAboveFooter","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlAboveHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowFooter","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowHeader","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"htmlBelowSummary","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"language","type":[[["string"]]]},{"name":"launchDate","optional":true,"type":[[["Date"," | "],["string"]]]},{"name":"logoUrl","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"name","type":[[["string"]]]},{"name":"nexmoSecret","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"nexmoSender","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"noticeColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"okColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"private","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"publicEmail","type":[[["string"]]]},{"name":"smsService","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"status","type":[[["PageStatus"]]]},{"name":"subdomain","type":[[["string"]]]},{"name":"subscribeBySms","optional":true,"type":[[["undefined"," | "],["false"," | "],["true"]]]},{"name":"timeformat","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioSender","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioSid","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"twilioToken","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"unknownColor","optional":true,"type":[[["undefined"," | "],["string"]]]},{"name":"useAllowList","type":[[["boolean"]]]},{"name":"useLargeHeader","type":[[["boolean"]]]},{"name":"websiteUrl","optional":true,"type":[[["undefined"," | "],["string"]]]}]},{"name":"Statuses","meta":{"line":189,"file":"Typings.ts","path":"utils"},"props":[{"name":"id","type":[[["string"]]]},{"name":"status","type":[[["ComponentStatus"]]]}]},{"name":"TeamMemberPost","meta":{"line":308,"file":"Typings.ts","path":"utils"},"props":[{"name":"email","type":[[["string"]]]}]},{"name":"TeamUser","meta":{"line":301,"file":"Typings.ts","path":"utils"},"props":[{"name":"avatar","type":[[["string"]]]},{"name":"email","type":[[["string"]]]},{"name":"id","type":[[["string"]]]},{"name":"name","type":[[["string"]]]}]},{"name":"ComponentStatus","type":[[["unknown"," | "],["unknown"," | "],["unknown"," | "],["unknown"," | "],["unknown"," | "],["unknown"]]],"meta":{"line":5,"file":"Typings.ts","path":"utils"}},{"name":"IncidentStatus","type":[[["unknown"," | "],["unknown"," | "],["unknown"," | "],["unknown"]]],"meta":{"line":13,"file":"Typings.ts","path":"utils"}},{"name":"PageStatus","type":[[["unknown"," | "],["unknown"]]],"meta":{"line":3,"file":"Typings.ts","path":"utils"}}]}